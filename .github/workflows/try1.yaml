name: Pipeline

on:
  pull_request:
    types:
      - closed

jobs:
  merge:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: "us-east-1"
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with: 
          terraform_version: 1.3.4

      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform init
        run: terraform init

      # - name: Download Terraform Plan File
        # uses: actions/github-script@v6
        # with:
        #   script: |
        #     console.log("Hello, world0");
        #     let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
        #        owner: context.repo.owner,
        #        repo: context.repo.repo,
        #        run_id: context.payload.workflow_run.id,
        #     });
        #     console.log("Hello, world1");
        #     let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
        #       return artifact.name == "terraform-plan-file-1.tfout"
        #     })[0];
        #     console.log(matchArtifact);
        #     console.log("Hello, world2");
        #     if (true) {
        #     console.log("Hello, world34");
        #     let download = await github.rest.actions.downloadArtifact({
        #        owner: context.repo.owner,
        #        repo: context.repo.repo,
        #        artifact_id: matchArtifact.id,
        #        archive_format: 'zip',
        #     });
        #     console.log("Hello, world45");
        #     let fs = require('fs');
        #     fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/artifact1.zip`, Buffer.from(download.data));
        #     }else {
        #     console.error('Artifact not found');}

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: "terraform-plan-file-1.tfout"
          path: devops.plan.tfout

      - name: random
        run: ls
          
      # - name: Unzip artifact1
      #   run: unzip artifact1.zip

      # - name: random
      #   run: ls

      # - name: abc
      #   run: terraform apply --auto-approve devops.plan.tfout

  
